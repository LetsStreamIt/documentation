@startuml auth-class

interface IUser {
    email: string
    password: string
}

class TokenData {
    id: string
    email: string
}

interface IUserRepository {
    createUser(email: string, password: string): Promise<IUser>
    findUserByEmail(email: string): Promise<IUser>
    deleteUser(email: string): Promise<void>
}

interface IAuthService {
    register(email: string, password: string): Promise<IUser>
    login(email: string, password: string): Promise<string>
    logout(email: string): Promise<void>
}

interface IPasswordService {
    hashPassword(password: string): Promise<string>
    comparePasswords(password: string, hashedPassword: string): Promise<boolean>
}

class AuthUseCase {
    register(email: string, password: string): Promise<IUser>
    login(email: string, password: string): Promise<string>
    logout(email: string): Promise<void>
}

class PasswordUseCase {
    hashPassword(password: string): Promise<string>
    comparePasswords(password: string, hashedPassword: string): Promise<boolean>
}

interface ITokenService {
    generateToken(data: TokenData, expiresIn: string): string
    validateToken(accessToken: string): Promise<boolean>
    refreshToken(refreshToken: string): Promise<string>
    getData(accessToken: string): Promise<TokenData>
}

class TokenUseCase {
    generateToken(data: TokenData, expiresIn: string): string
    validateToken(accessToken: string): Promise<boolean>
    refreshToken(refreshToken: string): Promise<string>
    getData(accessToken: string): Promise<TokenData>
}

interface IProfileRepository {
    createUserProfile(email: string, username: string, accessToken: string): Promise<void>
}

interface IProfileService {
    createUserProfile(email: string, username: string, accessToken: string): Promise<void>
}

class ProfileUseCase {
    createUserProfile(email: string, username: string, accessToken: string): Promise<void>
}

IAuthService o-up- IUserRepository
AuthUseCase o-up- IAuthService
PasswordUseCase o-up- IPasswordService

IAuthService o-left- TokenUseCase : uses >
IAuthService o-right- ProfileUseCase : uses >
IAuthService o-down- PasswordUseCase : uses >

TokenUseCase o-down- ITokenService

IProfileService o-up- IProfileRepository
ProfileUseCase o-up- IProfileService

IUserRepository -up->  IUser : creates >

TokenUseCase -up-> TokenData : uses >

@enduml